apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'signing'

group = getProperty('projectGroupName')
version = getProperty('projectVersionName')

File[] proGuardFileCollection = file('./proguard').listFiles()
File[] proGuardDebugFileCollection = file('./proguard-debug').listFiles()

android {
    compileSdkVersion 31
    namespace 'com.tazkiyatech.quran.sdk'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFile(getDefaultProguardFile('proguard-android.txt'))
            proguardFiles(proGuardFileCollection)
            proguardFiles(proGuardDebugFileCollection)
        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFile(getDefaultProguardFile('proguard-android.txt'))
            proguardFiles(proGuardFileCollection)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
    }

    testOptions {
        animationsDisabled true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.5.0'

    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'com.tazkiyatech:android-test-utils:1.8.0'
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
    group = 'build'
}

task generateJavadocJar(type: Jar) {
    from dokkaJavadoc
    classifier 'javadoc'
    description = "Builds up a jar of this module's Javadoc."
    group = 'build'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact generateJavadocJar
                artifact generateSourcesJar

                groupId getProperty('projectGroupName')
                artifactId getProperty('projectArtifactName')
                version getProperty('projectVersionName')

                pom {
                    name = getProperty('projectArtifactName')
                    description = 'An Android library that gives you easy, offline access to verses of the Quran in your Android projects.'
                    url = 'https://github.com/TazkiyaTech/quran-sdk'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    organization {
                        name = 'Tazkiya Tech'
                        url = 'http://tazkiyatech.com'
                    }
                    developers {
                        developer {
                            id = 'adil-hussain-84'
                            name = 'Adil Hussain'
                            email = 'adilson05uk@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/TazkiyaTech/quran-sdk.git'
                        developerConnection = 'scm:git:ssh://github.com:TazkiyaTech/quran-sdk.git'
                        url = 'https://github.com/TazkiyaTech/quran-sdk'
                    }
                }
            }
            debug(MavenPublication) {
                from components.debug
                artifact generateJavadocJar
                artifact generateSourcesJar

                groupId getProperty('projectGroupName')
                artifactId getProperty('projectArtifactName')
                version getProperty('projectVersionName')
            }
        }

        repositories {
            maven {
                url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username getProperty('sonatype_username')
                    password getProperty('sonatype_password')
                }
            }
        }
    }

    signing {
        // the 'signing.keyId', 'signing.password' and 'signing.secretKeyRingFile' properties required by this task are defined outside of this project in the '~/.gradle/gradle.properties' file
        sign publishing.publications.release
    }
}
